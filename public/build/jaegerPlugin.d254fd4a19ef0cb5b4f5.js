"use strict";(self.webpackChunkgrafana=self.webpackChunkgrafana||[]).push([[2032],{33309:(_,W,a)=>{a.d(W,{m:()=>A});var S=a(32196),l=a(96540),t=a(22391),L=a(29020),K=a(35931),$=a(40845),D=a(39268),v=a(14186),R=a(15292);function N({options:E,onOptionsChange:y}){const O=(0,$.of)(F);return l.createElement("div",{className:O.container},l.createElement(D.C,{className:O.row},l.createElement(v.I,{tooltip:"Displays the node graph above the trace view. Default: disabled",label:"Enable node graph",labelWidth:26},l.createElement(R.K,{id:"enableNodeGraph",value:E.jsonData.nodeGraph?.enabled,onChange:P=>(0,t.lO)({onOptionsChange:y,options:E},"nodeGraph",{...E.jsonData.nodeGraph,enabled:P.currentTarget.checked})}))))}const A=({options:E,onOptionsChange:y})=>{let O=E.type;return O+=E.type==="tempo"?"/configure-tempo-data-source/#node-graph":"/#node-graph",l.createElement(L.I,{title:"Node graph",description:l.createElement(K.H,{description:"Show or hide the node graph visualization.",suffix:O,feature:"the node graph"})},l.createElement(N,{options:E,onOptionsChange:y}))},F=E=>({infoText:(0,S.css)({label:"infoText",paddingBottom:E.spacing(2),color:E.colors.text.secondary}),container:(0,S.css)({label:"container",width:"100%"}),row:(0,S.css)({label:"row",alignItems:"baseline"})})},90057:(_,W,a)=>{a.d(W,{$:()=>P});var S=a(32196),l=a(96540),t=a(22391),L=a(91062),K=a(35931),$=a(55882),D=a(40845),v=a(39268),R=a(14186),N=a(55852),A=a(10354),F=a(20323),E=a(63009),y=a(43549);function O({options:i,onOptionsChange:h}){const U=(0,D.of)(Z);return l.createElement("div",{className:(0,S.css)({width:"100%"})},l.createElement(v.C,{className:U.row},l.createElement(R.I,{tooltip:"The Prometheus data source the trace is going to navigate to",label:"Data source",labelWidth:26},l.createElement($.s,{inputId:"trace-to-metrics-data-source-picker",pluginId:"prometheus",current:i.jsonData.tracesToMetrics?.datasourceUid,noDefault:!0,width:40,onChange:M=>(0,t.lO)({onOptionsChange:h,options:i},"tracesToMetrics",{...i.jsonData.tracesToMetrics,datasourceUid:M.uid})})),i.jsonData.tracesToMetrics?.datasourceUid?l.createElement(N.$n,{type:"button",variant:"secondary",size:"sm",fill:"text",onClick:()=>{(0,t.lO)({onOptionsChange:h,options:i},"tracesToMetrics",{...i.jsonData.tracesToMetrics,datasourceUid:void 0})}},"Clear"):null),l.createElement(v.C,null,l.createElement(F.e,{label:(0,y.cJ)("start"),tooltip:(0,y.XX)("start","-2m"),value:i.jsonData.tracesToMetrics?.spanStartTimeShift||"",onChange:M=>{(0,t.lO)({onOptionsChange:h,options:i},"tracesToMetrics",{...i.jsonData.tracesToMetrics,spanStartTimeShift:M})},placeholder:"-2m",isInvalidError:y.FJ})),l.createElement(v.C,null,l.createElement(F.e,{label:(0,y.cJ)("end"),tooltip:(0,y.XX)("end","2m"),value:i.jsonData.tracesToMetrics?.spanEndTimeShift||"",onChange:M=>{(0,t.lO)({onOptionsChange:h,options:i},"tracesToMetrics",{...i.jsonData.tracesToMetrics,spanEndTimeShift:M})},placeholder:"2m",isInvalidError:y.FJ})),l.createElement(v.C,null,l.createElement(R.I,{tooltip:"Tags that will be used in the metrics query",label:"Tags",labelWidth:26},l.createElement(E.l,{values:i.jsonData.tracesToMetrics?.tags??[],onChange:M=>(0,t.lO)({onOptionsChange:h,options:i},"tracesToMetrics",{...i.jsonData.tracesToMetrics,tags:M})}))),i.jsonData.tracesToMetrics?.queries?.map((M,B)=>l.createElement("div",{key:B,className:U.queryRow},l.createElement(R.I,{label:"Link Label",labelWidth:26,tooltip:"Descriptive label for the linked query"},l.createElement(A.p,{label:"Link Label",type:"text",allowFullScreen:!0,value:M.name,width:40,onChange:b=>{const x=(i.jsonData.tracesToMetrics?.queries??[]).map((C,G)=>G===B?{...C,name:b.currentTarget.value}:C);(0,t.lO)({onOptionsChange:h,options:i},"tracesToMetrics",{...i.jsonData.tracesToMetrics,queries:x})}})),l.createElement(R.I,{label:"Query",labelWidth:10,tooltip:"The Prometheus query that will run when navigating from a trace to metrics. Interpolate tags using the `$__tags` keyword",grow:!0},l.createElement(A.p,{label:"Query",type:"text",allowFullScreen:!0,value:M.query,onChange:b=>{const x=(i.jsonData.tracesToMetrics?.queries??[]).map((C,G)=>G===B?{...C,query:b.currentTarget.value}:C);(0,t.lO)({onOptionsChange:h,options:i},"tracesToMetrics",{...i.jsonData.tracesToMetrics,queries:x})}})),l.createElement(N.$n,{variant:"destructive",title:"Remove query",icon:"times",type:"button",onClick:()=>{const b=i.jsonData.tracesToMetrics?.queries.filter((x,C)=>C!==B);(0,t.lO)({onOptionsChange:h,options:i},"tracesToMetrics",{...i.jsonData.tracesToMetrics,queries:b})}}))),l.createElement(N.$n,{variant:"secondary",title:"Add query",icon:"plus",type:"button",onClick:()=>{(0,t.lO)({onOptionsChange:h,options:i},"tracesToMetrics",{...i.jsonData.tracesToMetrics,queries:[...i.jsonData.tracesToMetrics?.queries??[],{query:""}]})}},"Add query"))}const P=({options:i,onOptionsChange:h})=>{let U=i.type;return U+=i.type==="tempo"?"/configure-tempo-data-source/#trace-to-metrics":"/#trace-to-metrics",l.createElement(L.A,{title:"Trace to metrics",description:l.createElement(K.H,{description:"Navigate from a trace span to the selected data source's metrics.",suffix:U,feature:"trace to metrics"}),isCollapsible:!0,isInitiallyOpen:!0},l.createElement(O,{options:i,onOptionsChange:h}))},Z=i=>({infoText:{paddingBottom:i.spacing(2),color:i.colors.text.secondary},row:(0,S.css)({label:"row",alignItems:"baseline"}),queryRow:(0,S.css)({label:"queryRow",display:"flex",flexFlow:"wrap"})})},2255:(_,W,a)=>{a.r(W),a.d(W,{plugin:()=>We});var S=a(40187),l=a(32196),t=a(96540),L=a(40845);function K(){const n=(0,L.of)($);return t.createElement(t.Fragment,null,t.createElement("h2",{id:"jaeger-cheat-sheet"},"Jaeger Cheat Sheet"),t.createElement("p",null,"This cheat sheet provides a quick overview of the query types that are available. For more details about the Jaeger data source, check out"," ",t.createElement("a",{href:"https://grafana.com/docs/grafana/latest/datasources/jaeger",target:"_blank",rel:"noreferrer",className:n.anchorTag},"the documentation"),"."),t.createElement("hr",null),t.createElement("ul",{className:n.unorderedList},t.createElement("li",null,"Search - filter traces by service name. Addtionally, you can filter by tags or min/max duration, as well as limit the number of traces that are returned."),t.createElement("li",null,"TraceID - if you have a trace ID, simply enter the trace ID to see the trace."),t.createElement("li",null,"JSON File - you can upload a JSON file that contains a single trace to visualize it. If the file has multiple traces then the first trace is used for visualization. An example of a valid JSON file can be found in"," ",t.createElement("a",{href:"https://grafana.com/docs/grafana/latest/datasources/jaeger/#upload-json-trace-file",target:"_blank",rel:"noreferrer",className:n.anchorTag},"this section")," ","of the documentation.")))}const $=n=>({anchorTag:(0,l.css)`
    color: ${n.colors.text.link};
  `,unorderedList:(0,l.css)`
    list-style-type: none;
  `});var D=a(39268),v=a(14186),R=a(20084),N=a(37390),A=a(37270),F=a(66864),E=a(94354),y=a(55852),O=a(50877),P=a(72574),Z=a(9830),i=a(88323),h=a(10354),U=a(82467),M=a(3169),B=a(99140),b=a(60455),x=a.n(b);function C(n){if(!n)return"";const e=x().parse(n);return Object.keys(e).forEach(r=>{const s=e[r];typeof s!="string"&&(e[r]=String(s))}),JSON.stringify(e)}function G(n){if(!n)return"";try{return x().stringify(JSON.parse(n))}catch{return n}}const ee="e.g. 1.2s, 100ms, 500us",te="All",ie={label:te,value:void 0};function ce({datasource:n,query:e,onChange:r}){const[s,p]=(0,t.useState)(),[o,m]=(0,t.useState)(),[d,T]=(0,t.useState)({services:!1,operations:!1}),f=(0,t.useCallback)(async(c,g,Q="")=>{T(I=>({...I,[g]:!0}));try{const I=await n.metadataRequest(c);return I?I.sort().map(z=>({label:z,value:z})).filter(z=>z.value?(0,Z.I)(z.value,Q).found:!1):[{label:`No ${g} found`,value:`No ${g} found`}]}catch(I){return I instanceof Error&&(0,B.JD)((0,U.dx)((0,M.gi)("Error",I))),[]}finally{T(I=>({...I,[g]:!1}))}},[n]);return(0,t.useEffect)(()=>{(async()=>{const g=await f("/api/services","services");e.service&&(0,P.w)().containsTemplate(e.service)&&g.push((0,O.z)(e.service)),p(g)})()},[n,f,e.service]),(0,t.useEffect)(()=>{const c=async()=>{const g=await f(`/api/services/${encodeURIComponent((0,P.w)().replace(e.service))}/operations`,"operations");e.operation&&(0,P.w)().containsTemplate(e.operation)&&g.push((0,O.z)(e.operation)),m([ie,...g])};e.service&&c()},[n,e.service,f,e.operation]),t.createElement("div",{className:(0,l.css)({maxWidth:"500px"})},t.createElement(D.C,null,t.createElement(v.I,{label:"Service Name",labelWidth:14,grow:!0},t.createElement(i.l6,{inputId:"service",options:s,onOpenMenu:()=>f("/api/services","services"),isLoading:d.services,value:s?.find(c=>c?.value===e.service)||void 0,placeholder:"Select a service",onChange:c=>r({...e,service:c?.value,operation:e.service!==c?.value?void 0:e.operation}),menuPlacement:"bottom",isClearable:!0,"aria-label":"select-service-name",allowCustomValue:!0}))),t.createElement(D.C,null,t.createElement(v.I,{label:"Operation Name",labelWidth:14,grow:!0,disabled:!e.service},t.createElement(i.l6,{inputId:"operation",options:o,onOpenMenu:()=>f(`/api/services/${encodeURIComponent((0,P.w)().replace(e.service))}/operations`,"operations"),isLoading:d.operations,value:o?.find(c=>c.value===e.operation)||null,placeholder:"Select an operation",onChange:c=>r({...e,operation:c?.value||void 0}),menuPlacement:"bottom",isClearable:!0,"aria-label":"select-operation-name",allowCustomValue:!0}))),t.createElement(D.C,null,t.createElement(v.I,{label:"Tags",labelWidth:14,grow:!0,tooltip:"Values should be in logfmt."},t.createElement(h.p,{id:"tags",value:G(e.tags),placeholder:"http.status_code=200 error=true",onChange:c=>r({...e,tags:c.currentTarget.value})}))),t.createElement(D.C,null,t.createElement(v.I,{label:"Min Duration",labelWidth:14,grow:!0},t.createElement(h.p,{id:"minDuration",name:"minDuration",value:e.minDuration||"",placeholder:ee,onChange:c=>r({...e,minDuration:c.currentTarget.value})}))),t.createElement(D.C,null,t.createElement(v.I,{label:"Max Duration",labelWidth:14,grow:!0},t.createElement(h.p,{id:"maxDuration",name:"maxDuration",value:e.maxDuration||"",placeholder:ee,onChange:c=>r({...e,maxDuration:c.currentTarget.value})}))),t.createElement(D.C,null,t.createElement(v.I,{label:"Limit",labelWidth:14,grow:!0,tooltip:"Maximum number of returned results"},t.createElement(h.p,{id:"limit",name:"limit",value:e.limit||"",type:"number",onChange:c=>r({...e,limit:c.currentTarget.value?parseInt(c.currentTarget.value,10):void 0})}))))}const Ae=null;function de({datasource:n,query:e,onChange:r,onRunQuery:s}){const[p,o]=(0,t.useState)(!1),m=(0,L.$j)(),d=(0,L.of)(ue),T=c=>{const g={...e,query:c};r(g)},f=()=>{switch(e.queryType){case"search":return t.createElement(ce,{datasource:n,query:e,onChange:r});case"dependencyGraph":return null;default:return t.createElement(D.C,null,t.createElement(v.I,{label:"Trace ID",labelWidth:14,grow:!0},t.createElement(R.X,{query:e.query,onChange:T,onRunQuery:s,placeholder:"Enter a Trace ID (run with Shift+Enter)",portalOrigin:"jaeger"})))}};return t.createElement(t.Fragment,null,t.createElement(N.a,{title:"Upload trace",isOpen:p,onDismiss:()=>o(!1)},t.createElement("div",{className:(0,l.css)({padding:m.spacing(2)})},t.createElement(A.gH,{options:{multiple:!1},onLoad:c=>{n.uploadedJson=c,r({...e,queryType:"upload"}),o(!1),s()}}))),t.createElement("div",{className:d.container},t.createElement(D.C,null,t.createElement(v.I,{label:"Query type",grow:!0},t.createElement(F.Gy,{spacing:"sm",align:"center",justify:"space-between"},t.createElement(E.z,{options:[{value:"search",label:"Search"},{value:void 0,label:"TraceID"},{value:"dependencyGraph",label:"Dependency graph"}],value:e.queryType,onChange:c=>r({...e,queryType:c}),size:"md"}),t.createElement(y.$n,{variant:"secondary",size:"sm",onClick:()=>{o(!0)}},"Import trace")))),f()))}const ue=()=>({container:(0,l.css)({width:"100%"})});var me=a(68704),pe=a(91062),fe=a(43549),ge=a(90057),ve=a(33309),he=a(61653),ae=a(32264),w=a(25994),Ee=a(91409),Te=a(67061),De=a(22391),Ie=a(15292);function ye({options:n,onOptionsChange:e}){return t.createElement("div",{className:re.container},t.createElement("h3",{className:"page-heading"},"Query Trace by ID with Time Params"),t.createElement(D.C,{className:re.row},t.createElement(v.I,{tooltip:"pass time parameters when querying trace by ID",label:"Enable Time Parameters",labelWidth:26},t.createElement(Ie.K,{id:"enableTraceIdTimeParams",value:n.jsonData.traceIdTimeParams?.enabled,onChange:r=>(0,De.lO)({onOptionsChange:e,options:n},"traceIdTimeParams",{...n.jsonData.traceIdTimeParams,enabled:r.currentTarget.checked})}))))}const re={container:(0,l.css)`
    label: container;
    width: 100%;
  `,row:(0,l.css)`
    label: row;
    align-items: baseline;
  `},Me=({options:n,onOptionsChange:e})=>{const r=(0,L.of)(Se);return t.createElement("div",{className:r.container},t.createElement(me.I,{dataSourceName:"Jaeger",docsLink:"https://grafana.com/docs/grafana/latest/datasources/jaeger",hasRequiredFields:!1}),t.createElement(w.c,{spacing:4}),t.createElement(Ee.t,{defaultUrl:"http://localhost:16686",dataSourceConfig:n,showAccessOptions:!1,onChange:e,secureSocksDSProxyEnabled:ae.$.secureSocksDSProxyEnabled}),t.createElement(fe.T0,{options:n,onOptionsChange:e}),t.createElement(w.c,{spacing:4}),ae.$.featureToggles.traceToMetrics?t.createElement(t.Fragment,null,t.createElement(ge.$,{options:n,onOptionsChange:e}),t.createElement(w.c,{spacing:4})):null,t.createElement(pe.A,{title:"Additional settings",description:"Additional settings are optional settings that can be configured for more control over your data source.",isCollapsible:!0,isInitiallyOpen:!1},t.createElement(Te.B,{gap:5,direction:"column"},t.createElement(ve.m,{options:n,onOptionsChange:e}),t.createElement(he.NI,{options:n,onOptionsChange:e}),t.createElement(ye,{options:n,onOptionsChange:e}))))},Se=n=>({container:(0,l.css)`
    label: container;
    margin-bottom: ${n.spacing(2)};
    max-width: 900px;
  `});var V=a(2543),ne=a(75505),J=a(62467),H=a(81160),Oe=a(66847),Pe=a(76885),Ce=a(85858),k=a(37471),j=a(11261),Le=a(17172),Re=a(74856),u=a(25352);function Ne(n){const e=n?.data?.errors;if(e)return{data:[],errors:e.map(s=>({message:s.msg,status:s.code}))};const r=n?.data?.data;return r?{data:Ue(r)}:{data:[]}}function Ue(n){const e=new Map,r=[];for(const o of n)se(o.parent,e),se(o.child,e),r.push({[u.u.id]:o.parent+"--"+o.child,[u.u.target]:o.child,[u.u.source]:o.parent,[u.u.mainStat]:o.callCount});const s=new k.k({fields:[{name:u.u.id,type:j.PU.string},{name:u.u.title,type:j.PU.string}],meta:{preferredVisualisationType:"nodeGraph"}}),p=new k.k({fields:[{name:u.u.id,type:j.PU.string},{name:u.u.target,type:j.PU.string},{name:u.u.source,type:j.PU.string},{name:u.u.mainStat,type:j.PU.string,config:{displayName:"Call count"}}],meta:{preferredVisualisationType:"nodeGraph"}});for(const o of e.values())s.add(o);for(const o of r)p.add(o);return[s,p]}function se(n,e){e.has(n)||e.set(n,{[u.u.id]:n,[u.u.title]:n})}var X=a(32528);function le(n){const{nodes:e,edges:r}=be(n),[s,p]=(0,X.dY)();for(const o of e)s.add(o);for(const o of r)p.add(o);return[s,p]}function be(n){const e=[],r=[],s=xe(n.spans),p=(0,X.pl)(o=>{if(o>=n.spans.length)return;const m=n.spans[o];return{span:m,id:m.spanID,parentIds:m.references?.filter(d=>d.refType==="CHILD_OF").map(d=>d.spanID)||[]}});for(const o of n.spans){const m=n.processes[o.processID],d=p[o.spanID].children.map(Q=>{const I=p[Q].span;return[I.startTime,I.startTime+I.duration]}),T=(0,X.jP)(d),f=o.duration-T,c=(0,X.GT)(o.duration/1e3,s/1e3,f/1e3);e.push({[u.u.id]:o.spanID,[u.u.title]:m?.serviceName??"",[u.u.subTitle]:o.operationName,[u.u.mainStat]:c.main,[u.u.secondaryStat]:c.secondary,[u.u.color]:f/s});const g=o.references?.find(Q=>Q.refType==="CHILD_OF")?.spanID;g&&p[g].span&&r.push({[u.u.id]:g+"--"+o.spanID,[u.u.target]:o.spanID,[u.u.source]:g})}return{nodes:e,edges:r}}function xe(n){let e=0,r=1/0;for(const s of n)s.startTime<r&&(r=s.startTime),s.startTime+s.duration>e&&(e=s.startTime+s.duration);return e-r}var q=a(7810);class je extends S.mA{constructor(e,r=(0,Re.jG)(),s=(0,P.w)()){super(e),this.instanceSettings=e,this.timeSrv=r,this.templateSrv=s,this.uploadedJson=null,this.nodeGraph=e.jsonData.nodeGraph,this.traceIdTimeParams=e.jsonData.traceIdTimeParams}async metadataRequest(e,r){return(await(0,ne.s)(this._request(e,r,{hideFromInspector:!0}))).data.data}isSearchFormValid(e){return!!e.service}query(e){const r=e.targets[0];if(!r)return(0,J.of)({data:[oe]});if(r.queryType==="dependencyGraph"){const d=this.timeSrv.timeRange(),T=Y(d.to,!0)/1e3,f=T-Y(d.from,!1)/1e3;return this._request("/api/dependencies",{endTs:T,lookback:f}).pipe((0,H.T)(Ne))}if(r.queryType==="search"&&!this.isSearchFormValid(r))return(0,J.of)({error:{message:"You must select a service."},data:[]});let{start:s,end:p}=this.getTimeRange();if(r.queryType!=="search"&&r.query){let d=`/api/traces/${encodeURIComponent(this.templateSrv.replace(r.query,e.scopedVars))}`;return this.traceIdTimeParams&&(d+=`?start=${s}&end=${p}`),this._request(d).pipe((0,H.T)(T=>{const f=T?.data?.data?.[0];if(!f)return{data:[oe]};let c=[(0,q.Fb)(f)];return this.nodeGraph?.enabled&&c.push(...le(f)),{data:c}}))}if(r.queryType==="upload"){if(!this.uploadedJson)return(0,J.of)({data:[]});try{const d=JSON.parse(this.uploadedJson).data[0];let T=[(0,q.Fb)(d)];return this.nodeGraph?.enabled&&T.push(...le(d)),(0,J.of)({data:T})}catch{return(0,J.of)({error:{message:"The JSON file uploaded is not in a valid Jaeger format"},data:[]})}}let o=(0,V.pick)(this.applyVariables(r,e.scopedVars),["service","operation","tags","minDuration","maxDuration","limit"]),m=(0,V.pickBy)(o,V.identity);return m.operation===te&&(m=(0,V.omit)(m,"operation")),m.tags&&(m={...m,tags:C(m.tags.toString())}),this._request("/api/traces",{...m,...this.getTimeRange(),lookback:"custom"}).pipe((0,H.T)(d=>({data:[(0,q._i)(d.data.data,this.instanceSettings)]})))}interpolateVariablesInQueries(e,r){return!e||e.length===0?[]:e.map(s=>({...s,datasource:this.getRef(),...this.applyVariables(s,r)}))}applyVariables(e,r){let s={...e};return e.tags&&this.templateSrv.containsTemplate(e.tags)&&(s={...e,tags:this.templateSrv.replace(e.tags,r)}),{...s,service:this.templateSrv.replace(e.service??"",r),operation:this.templateSrv.replace(e.operation??"",r),minDuration:this.templateSrv.replace(e.minDuration??"",r),maxDuration:this.templateSrv.replace(e.maxDuration??"",r)}}async testDatasource(){return(0,ne.s)(this._request("/api/services").pipe((0,H.T)(e=>(e?.data?.data||[]).length>0?{status:"success",message:"Data source connected and services found."}:{status:"error",message:"Data source connected, but no services received. Verify that Jaeger is configured properly."}),(0,Oe.W)(e=>{let r="Jaeger: ";return e.statusText?r+=e.statusText:r+="Cannot connect to Jaeger",e.status&&(r+=`. ${e.status}`),e.data&&e.data.message?r+=`. ${e.data.message}`:e.data&&(r+=`. ${JSON.stringify(e.data)}`),(0,J.of)({status:"error",message:r})})))}getTimeRange(){const e=this.timeSrv.timeRange();return{start:Y(e.from,!1),end:Y(e.to,!0)}}getQueryDisplayText(e){return e.query||""}_request(e,r,s){const p=r?Pe.kM.serializeParams(r):"",o=`${this.instanceSettings.url}${e}${p.length?`?${p}`:""}`,m={...s,url:o};return(0,Le.AI)().fetch(m)}}function Y(n,e){return typeof n=="string"&&(n=Ce.parse(n,e)),n.valueOf()*1e3}const oe=new k.k({fields:[{name:"trace",type:j.PU.trace,values:[]}],meta:{preferredVisualisationType:"trace",custom:{traceFormat:"jaeger"}}}),We=new S.tD(je).setConfigEditor(Me).setQueryEditor(de).setQueryEditorHelp(K)}}]);

//# sourceMappingURL=jaegerPlugin.d254fd4a19ef0cb5b4f5.js.map